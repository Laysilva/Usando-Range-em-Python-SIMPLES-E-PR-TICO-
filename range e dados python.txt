>>> resposta = "repetir" >>> while resposta == "repetir": ... print "Oi, estamos dentro do while" ... resposta = raw_input("Digite repetir para começar novamente: ") ... Oi, estamos dentro do while Digite repetir para começar novamente: repetir Oi, estamos dentro do while Digite repetir para começar novamente: tchau!

>>> valores=[111,222,333,444,555] >>> for valor in valores: print "O valor é: ", valor O valor é: 111 O valor é: 222 O valor é: 333 O valor é: 444 O valor é: 555

Função Range()

Esta função é muito importante quando queremos gerar uma lista de números. Sua sintaxe é:

range(ni,nf,i) onde ni = número inicial, nf = número final e i = incremento.
Veja um exemplo:

>>> range(1,10)
[1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> range(1,10,2)
[1, 3, 5, 7, 9] 
Podemos utilizar o range dentro de um for da seguinte maneira:

>>> for numero in range(1,10):
print numero*2
2
4
6
8
10
12
14
16
18


-----------------------------------------------------------------------------------------------------------------

Classe de dados

Veja um exemplo de como implementar uma classe que realiza o armazenamento do valor em todas as suas instancias. Este exemplo foi retirado do faq do python.

>>> class c:
... count = 0
... def __init__(self):
... c.count = c.count +1
... def getcount(self):
... return c.count
...
>>> c1 = c()
>>> print "valor atual", c1.getcount()
valor atual 1
>>> print "valor atual", c1.getcount()
valor atual 1
>>> c2 = c()
>>> print "valor atual", c2.getcount()
valor atual 2
>>> c3 = c()
>>> print "valor atual", c3.getcount()
valor atual 3
